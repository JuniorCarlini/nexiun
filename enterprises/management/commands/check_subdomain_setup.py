from django.core.management.base import BaseCommand
from django.conf import settings
from enterprises.models import Enterprise
import socket


class Command(BaseCommand):
    help = 'Verifica se a configura√ß√£o de subdom√≠nios est√° correta'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('\nüîç DIAGN√ìSTICO DO SISTEMA DE SUBDOM√çNIOS'))
        self.stdout.write('=' * 60)
        
        # 1. Verificar ALLOWED_HOSTS
        self.stdout.write('\n1. üìã ALLOWED_HOSTS:')
        self.stdout.write(f'   {settings.ALLOWED_HOSTS}')
        
        if '.nexiun.com.br' in settings.ALLOWED_HOSTS:
            self.stdout.write(self.style.SUCCESS('   ‚úÖ Wildcard configurado corretamente'))
        else:
            self.stdout.write(self.style.ERROR('   ‚ùå PROBLEMA: Adicione ".nexiun.com.br" em ALLOWED_HOSTS'))
        
        # 2. Verificar Middleware
        self.stdout.write('\n2. ‚öôÔ∏è MIDDLEWARE:')
        middleware_list = settings.MIDDLEWARE
        
        subdomain_middleware = 'enterprises.middleware.SubdomainMiddleware'
        if subdomain_middleware in middleware_list:
            self.stdout.write(self.style.SUCCESS('   ‚úÖ SubdomainMiddleware configurado'))
        else:
            self.stdout.write(self.style.ERROR('   ‚ùå PROBLEMA: SubdomainMiddleware n√£o encontrado'))
        
        enterprise_middleware = 'enterprises.middleware.EnterpriseRequiredMiddleware'
        if enterprise_middleware in middleware_list:
            self.stdout.write(self.style.SUCCESS('   ‚úÖ EnterpriseRequiredMiddleware configurado'))
        else:
            self.stdout.write(self.style.ERROR('   ‚ùå PROBLEMA: EnterpriseRequiredMiddleware n√£o encontrado'))
        
        # 3. Verificar Empresas
        self.stdout.write('\n3. üè¢ EMPRESAS CADASTRADAS:')
        enterprises = Enterprise.objects.all()
        
        if not enterprises:
            self.stdout.write(self.style.WARNING('   ‚ö†Ô∏è Nenhuma empresa encontrada'))
            return
        
        for enterprise in enterprises:
            self.stdout.write(f'   üè¢ {enterprise.name}')
            self.stdout.write(f'      Subdom√≠nio: {enterprise.subdomain}')
            self.stdout.write(f'      URL completa: {enterprise.get_absolute_url()}')
        
        # 4. URLs para teste
        self.stdout.write('\n4. üß™ URLs PARA TESTE:')
        self.stdout.write('   Teste estas URLs no navegador:')
        
        for enterprise in enterprises:
            self.stdout.write(f'   ‚Ä¢ https://{enterprise.subdomain}.nexiun.com.br/users/login/')
        
        # 5. Comandos de teste DNS
        self.stdout.write('\n5. üåê TESTE DNS (execute no terminal):')
        for enterprise in enterprises:
            self.stdout.write(f'   nslookup {enterprise.subdomain}.nexiun.com.br')
        
        # 6. Status de DEBUG
        self.stdout.write('\n6. üîß CONFIGURA√á√ïES:')
        self.stdout.write(f'   DEBUG: {settings.DEBUG}')
        
        if settings.DEBUG:
            self.stdout.write(self.style.WARNING('   ‚ö†Ô∏è Modo DEBUG ativo - Para produ√ß√£o, use DEBUG=False'))
        else:
            self.stdout.write(self.style.SUCCESS('   ‚úÖ Modo produ√ß√£o ativo'))
        
        # 7. Pr√≥ximos passos
        self.stdout.write('\n7. üéØ PR√ìXIMOS PASSOS NO EAZYPANEL:')
        self.stdout.write('   1. V√° em "Domains" no EazyPanel')
        self.stdout.write('   2. Adicione: *.nexiun.com.br')
        self.stdout.write('   3. Ou adicione cada subdom√≠nio individualmente:')
        
        for enterprise in enterprises:
            self.stdout.write(f'      ‚Ä¢ {enterprise.subdomain}.nexiun.com.br')
        
        # 8. Verifica√ß√£o final
        self.stdout.write('\n8. ‚úÖ CHECKLIST EAZYPANEL:')
        checklist = [
            'Domain "nexiun.com.br" adicionado',
            'Domain "www.nexiun.com.br" adicionado',
            'Domain "*.nexiun.com.br" adicionado (wildcard)',
            'SSL/TLS certificado ativo',
            'Force HTTPS habilitado'
        ]
        
        for item in checklist:
            self.stdout.write(f'   ‚òê {item}')
        
        self.stdout.write('\n9. üö® SE N√ÉO FUNCIONAR:')
        problem_solutions = [
            'Verificar propaga√ß√£o DNS (pode levar at√© 24h)',
            'Limpar cache DNS do navegador',
            'Verificar se o registro "*" existe no Cloudflare',
            'Verificar logs do EazyPanel para erros',
            'Testar com curl: curl -I https://saldus.nexiun.com.br'
        ]
        
        for solution in problem_solutions:
            self.stdout.write(f'   ‚Ä¢ {solution}')
        
        # 10. Status final
        self.stdout.write('\n' + '=' * 60)
        self.stdout.write(self.style.SUCCESS('üéâ DJANGO EST√Å CONFIGURADO CORRETAMENTE!'))
        self.stdout.write(self.style.WARNING('üîß CONFIGURE OS DOM√çNIOS NO EAZYPANEL AGORA!')) 